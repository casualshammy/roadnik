name: Build and Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: windows-latest
      
    steps:
    - name: Get dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
      
    - name: Install Python3   
      uses: actions/setup-python@v2
      with:
        python-version: '3.11' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '>=18.16.0'
      
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build Server Windows x64
      run: python build.py --platform win-x64

    - name: Build Server Ubuntu 18.04 x64
      run: python build.py --platform ubuntu.18.04-x64

    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifactErrorsFailBuild: true
        artifacts: "*.zip"
        artifactContentType: "application/zip"
        draft: false
        makeLatest: true
        name: "Release: ${{ github.tag }}"
        prerelease: false
        

    # - name: Upload Release Windows x64
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./package.zip
    #     asset_name: package.zip
    #     asset_content_type: application/zip
    
    # - name: Upload Release Ubuntu 18.04 x64
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./package.zip
    #     asset_name: package.zip
    #     asset_content_type: application/zip

    # - name: Publish Release
    #   uses: eregon/publish-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     release_id: ${{ steps.create_release.outputs.id }}
